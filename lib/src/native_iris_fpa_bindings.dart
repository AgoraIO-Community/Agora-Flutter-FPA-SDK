// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings to IrisFpaProxyService
class NativeIrisFpaBinding {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeIrisFpaBinding(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeIrisFpaBinding.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// IrisRtcEngine
  ffi.Pointer<ffi.Void> CreateIrisFpaProxyService() {
    return _CreateIrisFpaProxyService();
  }

  late final _CreateIrisFpaProxyServicePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
          'CreateIrisFpaProxyService');
  late final _CreateIrisFpaProxyService = _CreateIrisFpaProxyServicePtr
      .asFunction<ffi.Pointer<ffi.Void> Function()>();

  void DestroyIrisFpaProxyService(
    ffi.Pointer<ffi.Void> service_ptr,
  ) {
    return _DestroyIrisFpaProxyService(
      service_ptr,
    );
  }

  late final _DestroyIrisFpaProxyServicePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'DestroyIrisFpaProxyService');
  late final _DestroyIrisFpaProxyService = _DestroyIrisFpaProxyServicePtr
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> SetIrisFpaProxyServiceEventHandler(
    ffi.Pointer<ffi.Void> service_ptr,
    ffi.Pointer<IrisCEventHandler> event_handler,
  ) {
    return _SetIrisFpaProxyServiceEventHandler(
      service_ptr,
      event_handler,
    );
  }

  late final _SetIrisFpaProxyServiceEventHandlerPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<IrisCEventHandler>)>>(
      'SetIrisFpaProxyServiceEventHandler');
  late final _SetIrisFpaProxyServiceEventHandler =
      _SetIrisFpaProxyServiceEventHandlerPtr.asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<IrisCEventHandler>)>();

  void UnsetIrisFpaProxyServiceEventHandler(
    ffi.Pointer<ffi.Void> service_ptr,
    ffi.Pointer<ffi.Void> handle,
  ) {
    return _UnsetIrisFpaProxyServiceEventHandler(
      service_ptr,
      handle,
    );
  }

  late final _UnsetIrisFpaProxyServiceEventHandlerPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>>('UnsetIrisFpaProxyServiceEventHandler');
  late final _UnsetIrisFpaProxyServiceEventHandler =
      _UnsetIrisFpaProxyServiceEventHandlerPtr.asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  int CallIrisFpaProxyServiceApi(
    ffi.Pointer<ffi.Void> service_ptr,
    int api_type,
    ffi.Pointer<ffi.Int8> params,
    ffi.Pointer<ffi.Int8> result,
  ) {
    return _CallIrisFpaProxyServiceApi(
      service_ptr,
      api_type,
      params,
      result,
    );
  }

  late final _CallIrisFpaProxyServiceApiPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              ffi.Pointer<ffi.Void>,
              ffi.Int32,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Int8>)>>('CallIrisFpaProxyServiceApi');
  late final _CallIrisFpaProxyServiceApi =
      _CallIrisFpaProxyServiceApiPtr.asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Int8>)>();

  int CallIrisFpaProxyServiceApiWithBuffer(
    ffi.Pointer<ffi.Void> service_ptr,
    int api_type,
    ffi.Pointer<ffi.Int8> params,
    ffi.Pointer<ffi.Void> buffer,
    ffi.Pointer<ffi.Int8> result,
  ) {
    return _CallIrisFpaProxyServiceApiWithBuffer(
      service_ptr,
      api_type,
      params,
      buffer,
      result,
    );
  }

  late final _CallIrisFpaProxyServiceApiWithBufferPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              ffi.Pointer<ffi.Void>,
              ffi.Int32,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Int8>)>>('CallIrisFpaProxyServiceApiWithBuffer');
  late final _CallIrisFpaProxyServiceApiWithBuffer =
      _CallIrisFpaProxyServiceApiWithBufferPtr.asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Int8>)>();

  ffi.Pointer<ffi.Void> SetIrisFpaProxyServiceEventHandlerFlutter(
    ffi.Pointer<ffi.Void> service_ptr,
    ffi.Pointer<ffi.Void> init_dart_api_data,
    int dart_send_port,
  ) {
    return _SetIrisFpaProxyServiceEventHandlerFlutter(
      service_ptr,
      init_dart_api_data,
      dart_send_port,
    );
  }

  late final _SetIrisFpaProxyServiceEventHandlerFlutterPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Int64)>>('SetIrisFpaProxyServiceEventHandlerFlutter');
  late final _SetIrisFpaProxyServiceEventHandlerFlutter =
      _SetIrisFpaProxyServiceEventHandlerFlutterPtr.asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();
}

class IrisCEventHandler extends ffi.Struct {
  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Int8>, ffi.Pointer<ffi.Int8>)>>
      OnEvent;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Int8>, ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Void>, ffi.Uint32)>> OnEventWithBuffer;
}

abstract class ApiTypeProxyService {
  static const int KServiceStart = 0;
  static const int KServiceStop = 1;
  static const int KServiceSetObserver = 2;
  static const int KServiceGetHttpProxyPort = 3;
  static const int KServiceGetTransparentProxyPort = 4;
  static const int KServiceSetParameters = 5;
  static const int KServiceSetOrUpdateHttpProxyChainConfig = 6;
  static const int KServiceGetDiagnosisInfo = 7;
  static const int KServiceGetAgoraFpaProxyServiceSdkVersion = 8;
  static const int KServiceGetAgoraFpaProxyServiceSdkBuildInfo = 9;
}
